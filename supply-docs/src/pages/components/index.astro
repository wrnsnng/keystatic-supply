---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';

const components = await getCollection('components');

// Status display information
const statusInfo = {
  'planned': { label: 'Planned', className: 'badge badge-planned' },
  'in-progress': { label: 'In Progress', className: 'badge badge-in-progress' },
  'completed': { label: 'Completed', className: 'badge badge-completed' }
} as const;

// Category information
const categoryInfo = {
  'inputs': { label: 'Inputs', description: 'Form controls and user input components', className: 'category-inputs' },
  'navigation': { label: 'Navigation', description: 'Components for navigating the UI', className: 'category-navigation' },
  'layout': { label: 'Layout', description: 'Structural and container components', className: 'category-layout' },
  'feedback': { label: 'Feedback', description: 'Components that provide user feedback', className: 'category-feedback' },
  'data-display': { label: 'Data Display', description: 'Components for displaying data', className: 'category-data-display' },
  'overlays': { label: 'Overlays', description: 'Modal and popup components', className: 'category-overlays' }
} as const;

// Define valid category types
type CategoryKey = 'inputs' | 'navigation' | 'layout' | 'feedback' | 'data-display' | 'overlays';

// Group components by category
const componentsByCategory = components.reduce((acc, component) => {
  const category = component.data.category as CategoryKey;
  if (!acc[category]) {
    acc[category] = [];
  }
  acc[category].push(component);
  return acc;
}, {} as Record<CategoryKey, typeof components>);

// Get categories that have components
const categoriesWithComponents = Object.keys(componentsByCategory) as CategoryKey[];
---

<Layout title="Components | Design System">
  <div class="container mx-auto px-4 py-8 max-w-4xl">
    <header class="mb-8">
      <h1 class="text-3xl font-bold mb-2">Components</h1>
      <p class="text-lg text-medium-contrast">
        Browse our collection of design system components
      </p>
    </header>

    {components.length === 0 ? (
      <div class="text-center py-12 bg-subtle rounded-lg">
        <p class="text-medium-contrast">No components have been added yet.</p>
        <p class="mt-4">
          <a href="/keystatic/collection/components" class="text-accent-9 hover:text-accent-10 hover:underline">
            Add a component in the admin UI
          </a>
        </p>
      </div>
    ) : (
      categoriesWithComponents.map(categoryKey => (
        <section class="mb-12">
          <div class="border-b border-border-subtle pb-2 mb-6">
            <h2 class="text-2xl font-bold">{categoryInfo[categoryKey].label}</h2>
            <p class="text-medium-contrast">{categoryInfo[categoryKey].description}</p>
          </div>
          
          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {componentsByCategory[categoryKey].map((component) => (
              <a 
                href={`/components/${component.slug}`}
                class="card p-6"
              >
                <div class="flex justify-between items-start mb-2">
                  <h3 class="text-xl font-semibold">{component.data.title}</h3>
                  <span class={`badge ${statusInfo[component.data.status].className}`}>
                    {statusInfo[component.data.status].label}
                  </span>
                </div>
                <p class="text-medium-contrast line-clamp-3">{component.data.description}</p>
              </a>
            ))}
          </div>
        </section>
      ))
    )}
  </div>
</Layout> 